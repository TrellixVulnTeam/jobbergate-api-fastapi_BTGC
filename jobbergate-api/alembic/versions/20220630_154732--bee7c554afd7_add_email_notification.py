"""Add email notification to Jobbergate.

Revision ID: bee7c554afd7
Revises: 2ab7ccf2f8c8
Create Date: 2022-06-30 15:47:32.312952

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from alembic import op

# revision identifiers, used by Alembic.
revision = "bee7c554afd7"
down_revision = "2ab7ccf2f8c8"
branch_labels = None
depends_on = None

old_status_list = ["CREATED", "SUBMITTED", "COMPLETED", "FAILED", "UNKNOWN"]
new_status_list = old_status_list + ["ABORTED"]

old_type = postgresql.ENUM(*old_status_list, name="jobsubmissionstatus")
new_type = postgresql.ENUM(*new_status_list, name="jobsubmissionstatus")
tmp_type = postgresql.ENUM(*new_status_list, name="status")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add column for reported messages
    op.add_column("job_submissions", sa.Column("report_message", sa.String(), nullable=True))
    # Create a temporary "_status" type, convert and drop the "old" type
    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE job_submissions ALTER COLUMN status TYPE _status USING status::text::_status")
    old_type.drop(op.get_bind(), checkfirst=False)
    # Create and convert to the "new" jobsubmissionstatus type
    new_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE job_submissions ALTER COLUMN status TYPE jobsubmissionstatus"
        " USING status::text::jobsubmissionstatus"
    )
    tmp_type.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop column for reported messages
    op.drop_column("job_submissions", "report_message")
    # Convert 'ABORTED' status into 'UNKNOWN'
    op.execute("UPDATE job_submissions SET status = 'UNKNOWN' WHERE status = 'ABORTED'")
    # Create a temporary "_status" type, convert and drop the "new" type
    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE job_submissions ALTER COLUMN status TYPE _status" " USING status::text::_status")
    new_type.drop(op.get_bind(), checkfirst=False)
    # Create and convert to the "old" status type
    old_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE job_submissions ALTER COLUMN status TYPE status"
        " USING status::text::jobsubmissionstatus"
    )
    tmp_type.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
